Ключевые Функциональные Модули
Система Тестирования (разработать с нуля):
Интерфейс: UI для прохождения теста с вопросами, вариантами ответов и таймером обратного отсчета (20 минут).
Защита от читерства: Реализовать на фронтенде отслеживание потери фокуса окна браузера (blur event). При первом срабатывании — предупреждение, при втором — автоматическая аннуляция теста.
API: Эндпоинты для получения теста, отправки ответов и немедленного подсчета результата (баллы и проценты).
Интеграция: Результат теста должен автоматически сохраняться в связанную с ним заявку (Applications).
Система Заявок (доработать):
Бизнес-логика ограничений (на бэкенде):
Лимит на подачу заявок на вступление: не более 3 в месяц на одного пользователя.
Лимит на отпуска: не более 2 в месяц.
Кулдаун: невозможность подать новую заявку на повышение/квалификацию в течение 7 дней после предыдущей.
Сброс лимитов: вся логика подсчета должна обнуляться 1-го числа каждого месяца.
Жизненный цикл заявки: Реализовать четкую смену статусов (pending -> approved -> (тест) -> resolved/rejected -> closed), где каждый статус меняет доступный пользователю функционал (например, появляется кнопка "Пройти тест").
Система Рапортов (разработать с нуля):
API и UI: Реализовать полный CRUD (создание, чтение, обновление, удаление) для рапортов.
Функционал:
Возможность скачивать шаблоны рапортов.
Форма подачи рапорта с возможностью прикрепления файла.
Интерфейс для супервайзера для просмотра рапорта, оставления комментария и смены статуса (принято/не принято).
Служба Поддержки (доработать):
Real-time Чат: Интегрировать WebSocket (например, с помощью Socket.IO) для создания полноценного диалогового окна между пользователем и администратором в реальном времени.
Загрузка файлов: Интегрировать систему загрузки файлов для отправки медиа-доказательств в чат.
3. Пользовательский Интерфейс и UX
Новые страницы и компоненты:
Публичная зона: Главная страница (посадочная), Галерея сообщества (с фильтрацией по департаментам), страница FAQ.
Личный кабинет: Интерфейс прохождения теста, раздел "Рапорты", раздел "Документация".
Модальные окна: Разработать отдельные формы для подачи заявок на "Перевод", "Совмещение", "Отпуск".
Динамический интерфейс:
Условный рендеринг: Отображение кнопок, аннотаций и сообщений в зависимости от статуса заявки и роли пользователя.
Визуальная обратная связь: Цветовая индикация статусов заявок (зеленый/красный), иконка уведомлений с индикатором новых событий.
Информационные разделы:
Создать статичные или управляемые через админ-панель страницы для FAQ и "Документации сообщества".
4. Нефункциональные Требования (Безопасность и Производительность)
Безопасность (устранить долги):
Обязательно: Вынести секретный ключ JWT в переменные окружения (.env).
Обязательно: Настроить веб-сервер (Nginx) для работы по HTTPS.
Обязательно: Внедрить ограничение частоты запросов (Rate Limiting) на ключевые эндпоинты (логин, регистрация, подача заявок).
Санитизация всего пользовательского ввода для защиты от XSS-атак.
Производительность (устранить долги):
Пагинация: Реализовать пагинацию на всех API-эндпоинтах, возвращающих списки (заявки, пользователи, рапорты, тикеты).
Кеширование: Внедрить кеширование на стороне бэкенда для редко изменяемых, но часто запрашиваемых данных (например, список департаментов).
Оптимизация фронтенда: Настроить Lazy Loading (ленивую загрузку) для React-компонентов и страниц, чтобы уменьшить начальный размер бандла.