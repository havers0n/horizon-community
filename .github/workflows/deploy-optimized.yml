name: Deploy to VPS (Optimized)

on:
  push:
    branches:
      - main
  workflow_dispatch: # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build:production
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Create deployment package
        run: |
          # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Ç–æ–ª—å–∫–æ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ (–±–µ–∑ node_modules –∏ env.example)
          tar -czf deployment.tar.gz \
            dist/ \
            package.json \
            package-lock.json \
            scripts/ \
            public/ \
            supabase/ \
            migrations/ \
            docs/ \
            README.md

      - name: Deploy to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "deployment.tar.gz"
          target: "/var/www/app"
          strip_components: 0

      - name: Setup and restart application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            cd /var/www/app
            
            # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤
            tar -xzf deployment.tar.gz
            
            # –°–æ–∑–¥–∞–µ–º .env –∏–∑ GitHub Secrets
            echo "üîê –°–æ–∑–¥–∞–µ–º .env –∏–∑ GitHub Secrets..."
            echo "NODE_ENV=production" > .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
            echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env
            echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" >> .env
            echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}" >> .env
            
            # –°–æ–∑–¥–∞–µ–º ecosystem —Ñ–∞–π–ª –¥–ª—è PM2
            echo "üìù –°–æ–∑–¥–∞–µ–º ecosystem —Ñ–∞–π–ª –¥–ª—è PM2..."
            cat > ecosystem.config.js << 'EOL'
            module.exports = {
              apps: [{
                name: 'roleplayidentity',
                script: 'dist/index.js',
                env: {
                  NODE_ENV: 'production',
                  PORT: '${{ secrets.PORT }}',
                  SUPABASE_URL: '${{ secrets.SUPABASE_URL }}',
                  SUPABASE_ANON_KEY: '${{ secrets.SUPABASE_ANON_KEY }}',
                  SUPABASE_SERVICE_ROLE_KEY: '${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}',
                  DATABASE_URL: '${{ secrets.DATABASE_URL }}',
                  JWT_SECRET: '${{ secrets.JWT_SECRET }}',
                  VITE_SUPABASE_URL: '${{ secrets.VITE_SUPABASE_URL }}',
                  VITE_SUPABASE_ANON_KEY: '${{ secrets.VITE_SUPABASE_ANON_KEY }}'
                }
              }]
            };
            EOL
            
            # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ—Å—Ç–∞—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if pm2 list | grep -q "roleplayidentity"; then
              echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
              pm2 delete roleplayidentity
            fi
            
            echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å ecosystem —Ñ–∞–π–ª–æ–º..."
            pm2 start ecosystem.config.js
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2
            pm2 save
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
            pm2 status
            
            # –û—á–∏—â–∞–µ–º –∞—Ä—Ö–∏–≤
            rm -f deployment.tar.gz
            
            echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"

      - name: Health check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            sleep 5
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å PM2
            pm2 status
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if curl -f http://localhost:5000/api/health > /dev/null 2>&1; then
              echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ localhost:5000"
            else
              echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ localhost:5000"
              echo "üìã –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
              pm2 logs roleplayidentity --lines 10 --nostream
              exit 1
            fi 