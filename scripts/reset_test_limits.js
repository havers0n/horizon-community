import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

// –ò—Å–ø–æ–ª—å–∑—É–µ–º service role key –¥–ª—è —Å–±—Ä–æ—Å–∞ –ª–∏–º–∏—Ç–æ–≤
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'http://localhost:54321';
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU';

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

async function resetTestLimits() {
  console.log('üîÑ –°–±—Ä–æ—Å –ª–∏–º–∏—Ç–æ–≤ –∑–∞—è–≤–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è candidate
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('id, email, username')
      .eq('email', 'candidate@horizon.com')
      .single();

    if (userError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError.message);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email} (ID: ${user.id})`);

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    const currentMonth = new Date();
    currentMonth.setDate(1); // –ü–µ—Ä–≤—ã–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞
    currentMonth.setHours(0, 0, 0, 0);

    const { data: deletedApps, error: deleteError } = await supabase
      .from('applications')
      .delete()
      .eq('author_id', user.id)
      .eq('type', 'entry')
      .gte('created_at', currentMonth.toISOString());

    if (deleteError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–æ–∫:', deleteError.message);
      return;
    }

    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ: ${deletedApps?.length || 0}`);

    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–±—Ä–æ—Å–µ –ª–∏–º–∏—Ç–æ–≤
    const { error: notificationError } = await supabase
      .from('notifications')
      .insert({
        recipient_id: user.id,
        content: '–õ–∏–º–∏—Ç—ã –∑–∞—è–≤–æ–∫ —Å–±—Ä–æ—à–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ.',
        link: '/dashboard',
        is_read: false
      });

    if (notificationError) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notificationError.message);
    } else {
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–±—Ä–æ—Å–µ –ª–∏–º–∏—Ç–æ–≤');
    }

    console.log('\nüéâ –õ–∏–º–∏—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã!');
    console.log('=====================================');
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email}`);
    console.log(`üìù –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ`);
    console.log('=====================================');

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ª–∏–º–∏—Ç–æ–≤:', error.message);
  }
}

resetTestLimits().catch(console.error); 