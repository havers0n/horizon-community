import jwt from 'jsonwebtoken'

// –¢–æ—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ Supabase –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
const JWT_SECRET = 'super-secret-jwt-token-with-at-least-32-characters-long'
const JWT_ISSUER = 'http://localhost:54321/auth/v1'
const JWT_AUD = 'authenticated'

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º anon –∫–ª—é—á
const anonPayload = {
    iss: JWT_ISSUER,
    sub: 'anon',
    aud: JWT_AUD,
    role: 'anon',
    iat: Math.floor(Date.now() / 1000),
    exp: Math.floor(Date.now() / 1000) + (10 * 365 * 24 * 60 * 60) // 10 –ª–µ—Ç
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º service_role –∫–ª—é—á
const servicePayload = {
    iss: JWT_ISSUER,
    sub: 'service_role',
    aud: JWT_AUD,
    role: 'service_role',
    iat: Math.floor(Date.now() / 1000),
    exp: Math.floor(Date.now() / 1000) + (10 * 365 * 24 * 60 * 60) // 10 –ª–µ—Ç
}

try {
    const anonToken = jwt.sign(anonPayload, JWT_SECRET)
    const serviceToken = jwt.sign(servicePayload, JWT_SECRET)
    
    console.log('üîë –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ JWT —Ç–æ–∫–µ–Ω—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Supabase:')
    console.log('\n# –û–±–Ω–æ–≤–∏—Ç–µ –≤–∞—à .env —Ñ–∞–π–ª:')
    console.log('SUPABASE_URL=http://localhost:54321')
    console.log('SUPABASE_ANON_KEY=' + anonToken)
    console.log('SUPABASE_SERVICE_ROLE_KEY=' + serviceToken)
    console.log('JWT_SECRET=' + JWT_SECRET)
    console.log('\nVITE_SUPABASE_URL=http://localhost:54321')
    console.log('VITE_SUPABASE_ANON_KEY=' + anonToken)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–æ–≤
    const decodedAnon = jwt.verify(anonToken, JWT_SECRET)
    const decodedService = jwt.verify(serviceToken, JWT_SECRET)
    
    console.log('\n‚úÖ –¢–æ–∫–µ–Ω—ã –≤–∞–ª–∏–¥–Ω—ã!')
    console.log('Anon token payload:', JSON.stringify(decodedAnon, null, 2))
    console.log('Service token payload:', JSON.stringify(decodedService, null, 2))
    
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤:', error.message)
}
