#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js';
import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const dotenv = await import('dotenv');
dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è VITE_SUPABASE_URL –∏–ª–∏ SUPABASE_SERVICE_ROLE_KEY');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function applyForumMigrationDirect() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä—è–º–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —Ñ–æ—Ä—É–º–∞...');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–æ –æ–¥–Ω–æ–π
    console.log('üìã –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã...');
    
    // 1. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º forum_categories...');
    const { error: catError } = await supabase.rpc('exec_sql', {
      sql: `
        CREATE TABLE IF NOT EXISTS forum_categories (
          id SERIAL PRIMARY KEY,
          name TEXT NOT NULL,
          description TEXT,
          department_id INTEGER REFERENCES departments(id),
          icon TEXT,
          color TEXT,
          order_index INTEGER NOT NULL DEFAULT 0,
          is_active BOOLEAN NOT NULL DEFAULT true,
          topics_count INTEGER NOT NULL DEFAULT 0,
          posts_count INTEGER NOT NULL DEFAULT 0,
          last_activity TIMESTAMP,
          created_at TIMESTAMP DEFAULT NOW() NOT NULL,
          updated_at TIMESTAMP DEFAULT NOW() NOT NULL
        );
      `
    });
    
    if (catError) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è forum_categories:', catError.message);
    } else {
      console.log('‚úÖ forum_categories —Å–æ–∑–¥–∞–Ω–∞');
    }
    
    // 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç–µ–º
    console.log('2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º forum_topics...');
    const { error: topicsError } = await supabase.rpc('exec_sql', {
      sql: `
        CREATE TABLE IF NOT EXISTS forum_topics (
          id SERIAL PRIMARY KEY,
          category_id INTEGER NOT NULL REFERENCES forum_categories(id),
          author_id INTEGER NOT NULL REFERENCES users(id),
          title TEXT NOT NULL,
          content TEXT NOT NULL,
          status TEXT NOT NULL DEFAULT 'open',
          is_pinned BOOLEAN NOT NULL DEFAULT false,
          is_locked BOOLEAN NOT NULL DEFAULT false,
          views_count INTEGER NOT NULL DEFAULT 0,
          replies_count INTEGER NOT NULL DEFAULT 0,
          last_post_id INTEGER,
          last_post_author_id INTEGER REFERENCES users(id),
          last_post_at TIMESTAMP,
          tags TEXT[] DEFAULT '{}',
          created_at TIMESTAMP DEFAULT NOW() NOT NULL,
          updated_at TIMESTAMP DEFAULT NOW() NOT NULL
        );
      `
    });
    
    if (topicsError) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è forum_topics:', topicsError.message);
    } else {
      console.log('‚úÖ forum_topics —Å–æ–∑–¥–∞–Ω–∞');
    }
    
    // 3. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π
    console.log('3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º forum_posts...');
    const { error: postsError } = await supabase.rpc('exec_sql', {
      sql: `
        CREATE TABLE IF NOT EXISTS forum_posts (
          id SERIAL PRIMARY KEY,
          topic_id INTEGER NOT NULL REFERENCES forum_topics(id),
          author_id INTEGER NOT NULL REFERENCES users(id),
          parent_id INTEGER,
          content TEXT NOT NULL,
          is_edited BOOLEAN NOT NULL DEFAULT false,
          edited_at TIMESTAMP,
          edited_by INTEGER REFERENCES users(id),
          reactions_count INTEGER NOT NULL DEFAULT 0,
          created_at TIMESTAMP DEFAULT NOW() NOT NULL,
          updated_at TIMESTAMP DEFAULT NOW() NOT NULL
        );
      `
    });
    
    if (postsError) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è forum_posts:', postsError.message);
    } else {
      console.log('‚úÖ forum_posts —Å–æ–∑–¥–∞–Ω–∞');
    }
    
    // 4. –î–æ–±–∞–≤–ª—è–µ–º self-reference –¥–ª—è parent_id
    console.log('4Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º self-reference –¥–ª—è forum_posts...');
    const { error: selfRefError } = await supabase.rpc('exec_sql', {
      sql: `
        ALTER TABLE forum_posts ADD CONSTRAINT forum_posts_parent_id_fkey 
        FOREIGN KEY (parent_id) REFERENCES forum_posts(id);
      `
    });
    
    if (selfRefError) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è self-reference:', selfRefError.message);
    } else {
      console.log('‚úÖ Self-reference –¥–æ–±–∞–≤–ª–µ–Ω');
    }
    
    // 5. –°–æ–∑–¥–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    console.log('5Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã...');
    
    const tables = [
      {
        name: 'forum_reactions',
        sql: `
          CREATE TABLE IF NOT EXISTS forum_reactions (
            id SERIAL PRIMARY KEY,
            post_id INTEGER NOT NULL REFERENCES forum_posts(id),
            user_id INTEGER NOT NULL REFERENCES users(id),
            reaction_type TEXT NOT NULL,
            created_at TIMESTAMP DEFAULT NOW() NOT NULL,
            UNIQUE(post_id, user_id, reaction_type)
          );
        `
      },
      {
        name: 'forum_subscriptions',
        sql: `
          CREATE TABLE IF NOT EXISTS forum_subscriptions (
            id SERIAL PRIMARY KEY,
            user_id INTEGER NOT NULL REFERENCES users(id),
            topic_id INTEGER NOT NULL REFERENCES forum_topics(id),
            is_email_notification BOOLEAN NOT NULL DEFAULT true,
            created_at TIMESTAMP DEFAULT NOW() NOT NULL,
            UNIQUE(user_id, topic_id)
          );
        `
      },
      {
        name: 'forum_views',
        sql: `
          CREATE TABLE IF NOT EXISTS forum_views (
            id SERIAL PRIMARY KEY,
            topic_id INTEGER NOT NULL REFERENCES forum_topics(id),
            user_id INTEGER REFERENCES users(id),
            ip_address TEXT,
            user_agent TEXT,
            viewed_at TIMESTAMP DEFAULT NOW() NOT NULL
          );
        `
      },
      {
        name: 'forum_stats',
        sql: `
          CREATE TABLE IF NOT EXISTS forum_stats (
            id SERIAL PRIMARY KEY,
            total_topics INTEGER NOT NULL DEFAULT 0,
            total_posts INTEGER NOT NULL DEFAULT 0,
            total_members INTEGER NOT NULL DEFAULT 0,
            online_now INTEGER NOT NULL DEFAULT 0,
            last_update TIMESTAMP DEFAULT NOW() NOT NULL
          );
        `
      }
    ];
    
    for (const table of tables) {
      const { error } = await supabase.rpc('exec_sql', { sql: table.sql });
      if (error) {
        console.log(`‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è ${table.name}:`, error.message);
      } else {
        console.log(`‚úÖ ${table.name} —Å–æ–∑–¥–∞–Ω–∞`);
      }
    }
    
    // 6. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
    console.log('6Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã...');
    const indexes = [
      'CREATE INDEX IF NOT EXISTS idx_forum_topics_category_id ON forum_topics(category_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_topics_author_id ON forum_topics(author_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_topics_created_at ON forum_topics(created_at);',
      'CREATE INDEX IF NOT EXISTS idx_forum_topics_is_pinned ON forum_topics(is_pinned);',
      'CREATE INDEX IF NOT EXISTS idx_forum_topics_status ON forum_topics(status);',
      'CREATE INDEX IF NOT EXISTS idx_forum_posts_topic_id ON forum_posts(topic_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_posts_author_id ON forum_posts(author_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_posts_parent_id ON forum_posts(parent_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_posts_created_at ON forum_posts(created_at);',
      'CREATE INDEX IF NOT EXISTS idx_forum_reactions_post_id ON forum_reactions(post_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_reactions_user_id ON forum_reactions(user_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_subscriptions_user_id ON forum_subscriptions(user_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_subscriptions_topic_id ON forum_subscriptions(topic_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_views_topic_id ON forum_views(topic_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_views_user_id ON forum_views(user_id);',
      'CREATE INDEX IF NOT EXISTS idx_forum_views_viewed_at ON forum_views(viewed_at);'
    ];
    
    for (const index of indexes) {
      const { error } = await supabase.rpc('exec_sql', { sql: index });
      if (error) {
        console.log(`‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞:`, error.message);
      }
    }
    
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã');
    
    // 7. –í–∫–ª—é—á–∞–µ–º RLS
    console.log('7Ô∏è‚É£ –í–∫–ª—é—á–∞–µ–º RLS...');
    const rlsTables = [
      'forum_categories',
      'forum_topics',
      'forum_posts',
      'forum_reactions',
      'forum_subscriptions',
      'forum_views',
      'forum_stats'
    ];
    
    for (const table of rlsTables) {
      const { error } = await supabase.rpc('exec_sql', { 
        sql: `ALTER TABLE ${table} ENABLE ROW LEVEL SECURITY;` 
      });
      if (error) {
        console.log(`‚ö†Ô∏è  –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è RLS –¥–ª—è ${table}:`, error.message);
      }
    }
    
    console.log('‚úÖ RLS –≤–∫–ª—é—á–µ–Ω');
    
    // 8. –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('8Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');
    
    const { error: statsError } = await supabase.rpc('exec_sql', {
      sql: `
        INSERT INTO forum_stats (total_topics, total_posts, total_members, online_now) 
        VALUES (0, 0, 0, 0) ON CONFLICT DO NOTHING;
      `
    });
    
    if (statsError) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsError.message);
    } else {
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞');
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = [
      ['–ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç', '–ú–∞–Ω—É–∞–ª—ã, –≥–∞–π–¥—ã –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø–æ–ª–∏—Ü–µ–π—Å–∫–æ–≥–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞', 1, 'shield', 'bg-blue-500', 1],
      ['–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç', '–ú–∞–Ω—É–∞–ª—ã, –≥–∞–π–¥—ã –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞', 2, 'users', 'bg-green-500', 2],
      ['–î–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–∏–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç', '–ú–∞–Ω—É–∞–ª—ã, –≥–∞–π–¥—ã –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–æ–≥–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞', 3, 'phone', 'bg-yellow-500', 3],
      ['–ü–æ–∂–∞—Ä–Ω—ã–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç', '–ú–∞–Ω—É–∞–ª—ã, –≥–∞–π–¥—ã –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø–æ–∂–∞—Ä–Ω–æ–≥–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞', 4, 'truck', 'bg-red-500', 4],
      ['–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç', '–ú–∞–Ω—É–∞–ª—ã, –≥–∞–π–¥—ã –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞', 5, 'heart', 'bg-pink-500', 5],
      ['–û–±—â–∏–µ –º–∞–Ω—É–∞–ª—ã –∏ –≥–∞–π–¥—ã', '–ë–∞–∑–æ–≤—ã–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤', null, 'book-open', 'bg-purple-500', 6]
    ];
    
    for (const category of categories) {
      const { error } = await supabase.rpc('exec_sql', {
        sql: `
          INSERT INTO forum_categories (name, description, department_id, icon, color, order_index) 
          VALUES ('${category[0]}', '${category[1]}', ${category[2] || 'NULL'}, '${category[3]}', '${category[4]}', ${category[5]}) 
          ON CONFLICT DO NOTHING;
        `
      });
      
      if (error) {
        console.log(`‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category[0]}:`, error.message);
      } else {
        console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${category[0]}" —Å–æ–∑–¥–∞–Ω–∞`);
      }
    }
    
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —Ñ–æ—Ä—É–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    
    try {
      const { data: categories, error: categoriesError } = await supabase
        .from('forum_categories')
        .select('*');
      
      if (categoriesError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', categoriesError.message);
      } else {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ñ–æ—Ä—É–º–∞`);
        categories.forEach(cat => {
          console.log(`   - ${cat.name} (${cat.topics_count} —Ç–µ–º, ${cat.posts_count} —Å–æ–æ–±—â–µ–Ω–∏–π)`);
        });
      }
    } catch (err) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', err.message);
    }
    
    console.log('üéØ –ú–∏–≥—Ä–∞—Ü–∏—è —Ñ–æ—Ä—É–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
    console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Ñ–æ—Ä—É–º–∞ –ø–æ –∞–¥—Ä–µ—Å—É /forum');
    console.log('   3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–µ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
applyForumMigrationDirect(); 