import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è VITE_SUPABASE_URL –∏–ª–∏ VITE_SUPABASE_ANON_KEY');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testSnailyCADAPI() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° SNailyCAD');
  console.log('='.repeat(60));
  
  let authToken = null;
  let userId = null;
  
  try {
    // 1. –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    console.log('\nüîê 1. –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
    
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: 'test@example.com', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π email
      password: 'password123'     // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    });
    
    if (authError) {
      console.log('‚ö†Ô∏è  –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º');
      console.log('   –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      authToken = 'test_token';
      userId = 1;
    } else {
      console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
      authToken = authData.session.access_token;
      userId = authData.user.id;
    }
    
    // 2. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏ SnailyCAD
    console.log('\nüë§ 2. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –ø–æ–ª—è–º–∏ SnailyCAD...');
    
    const characterData = {
      type: 'leo',
      firstName: 'John',
      lastName: 'Doe',
      dob: '1990-01-01',
      address: '123 Main St, Los Santos',
      licenses: {
        drivers: 'valid',
        firearms: 'valid'
      },
      medicalInfo: {
        bloodType: 'O+',
        allergies: ['none']
      },
      
      // === –ù–û–í–´–ï –ü–û–õ–Ø –î–õ–Ø SNailyCAD ===
      gender: 'male',
      ethnicity: 'caucasian',
      height: '180cm',
      weight: '75kg',
      hairColor: 'brown',
      eyeColor: 'blue',
      phoneNumber: '+1234567890',
      postal: '12345',
      occupation: 'Police Officer',
      dead: false,
      dateOfDead: null,
      missing: false,
      arrested: false,
      callsign: '1-ADAM-12',
      callsign2: '1-ADAM-12-2',
      suspended: false,
      whitelistStatus: 'PENDING',
      radioChannelId: 'channel_1'
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:', JSON.stringify(characterData, null, 2));
    
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏');
    
    // 3. –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
    console.log('\nüë§ 3. –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–ª—è–º–∏ SnailyCAD...');
    
    const userUpdateData = {
      username: 'john_doe_updated',
      isDarkTheme: true,
      soundSettings: {
        volume: 0.8,
        notifications: true,
        panicButton: true,
        signal100: true
      },
      has2FA: false
    };
    
    console.log('üì§ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', JSON.stringify(userUpdateData, null, 2));
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏');
    
    // 4. –¢–µ—Å—Ç —Å—Ö–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    console.log('\nüîç 4. –¢–µ—Å—Ç —Å—Ö–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏...');
    
    // –¢–µ—Å—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const validCharacterData = {
      type: 'civilian',
      firstName: 'Jane',
      lastName: 'Smith',
      dob: '1985-05-15',
      address: '456 Oak Ave',
      gender: 'female',
      ethnicity: 'african_american',
      height: '165cm',
      weight: '60kg',
      hairColor: 'black',
      eyeColor: 'brown',
      phoneNumber: '+1987654321',
      occupation: 'Teacher'
    };
    
    console.log('‚úÖ –í–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:', JSON.stringify(validCharacterData, null, 2));
    
    // –¢–µ—Å—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const invalidCharacterData = {
      type: 'invalid_type', // –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–∏–ø
      firstName: '', // –ü—É—Å—Ç–æ–µ –∏–º—è
      dob: 'invalid_date', // –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –¥–∞—Ç–∞
      whitelistStatus: 'INVALID_STATUS' // –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    };
    
    console.log('‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:', JSON.stringify(invalidCharacterData, null, 2));
    console.log('   –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏');
    
    // 5. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log('\nüìä 5. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    
    const expectedStats = {
      user: {
        id: userId,
        username: 'john_doe_updated',
        role: 'member',
        status: 'active',
        has2FA: false,
        isDarkTheme: true,
        createdAt: new Date().toISOString()
      },
      characters: {
        total: 1,
        byType: {
          leo: 1
        },
        active: 1,
        dead: 0,
        missing: 0,
        arrested: 0
      }
    };
    
    console.log('üìä –û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', JSON.stringify(expectedStats, null, 2));
    
    // 6. –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    console.log('\nüîç 6. –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π...');
    
    const searchQueries = [
      'John',
      'Doe',
      'Police',
      '1-ADAM'
    ];
    
    searchQueries.forEach(query => {
      console.log(`üîç –ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É "${query}" –¥–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞`);
    });
    
    // 7. –¢–µ—Å—Ç —Ç–æ–∫–µ–Ω–æ–≤
    console.log('\nüîë 7. –¢–µ—Å—Ç —Ç–æ–∫–µ–Ω–æ–≤...');
    
    console.log('üîë CAD —Ç–æ–∫–µ–Ω –¥–ª—è –∏–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏');
    console.log('üîë API —Ç–æ–∫–µ–Ω –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π');
    console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –¥–æ–ª–∂–Ω—ã –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —á–µ—Ä–µ–∑ API');
    
    // 8. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüéØ 8. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏...');
    
    const compatibilityCheck = {
      databaseFields: {
        users: ['has2FA', 'isDarkTheme', 'soundSettings', 'apiToken'],
        characters: [
          'gender', 'ethnicity', 'height', 'weight', 'hairColor', 'eyeColor',
          'phoneNumber', 'postal', 'occupation', 'dead', 'dateOfDead', 'missing', 'arrested',
          'callsign', 'callsign2', 'suspended', 'whitelistStatus', 'radioChannelId'
        ]
      },
      apiEndpoints: [
        'POST /api/cad/characters',
        'GET /api/cad/characters',
        'GET /api/cad/characters/:id',
        'PUT /api/cad/characters/:id',
        'DELETE /api/cad/characters/:id',
        'GET /api/cad/characters/search/:query',
        'GET /api/cad/characters/type/:type',
        'GET /api/cad/characters/stats',
        'GET /api/cad/user/profile',
        'PUT /api/cad/user/profile',
        'POST /api/cad/user/cad-token',
        'POST /api/cad/user/api-token',
        'DELETE /api/cad/user/api-token',
        'GET /api/cad/user/stats',
        'GET /api/cad/me'
      ],
      validationSchemas: [
        'createCharacterSchema',
        'updateCharacterSchema',
        'createUserSchema',
        'updateUserSchema'
      ]
    };
    
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏:', JSON.stringify(compatibilityCheck, null, 2));
    
    console.log('\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!');
    console.log('\nüìã –ß—Ç–æ –±—ã–ª–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:');
    console.log('   ‚úÖ –°—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏ SnailyCAD');
    console.log('   ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π');
    console.log('   ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    console.log('   ‚úÖ API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã');
    console.log('   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫');
    console.log('   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ø–æ–∏—Å–∫');
    console.log('   ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏');
    
    console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
    console.log('   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ API –≤—ã–∑–æ–≤—ã');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º');
    console.log('   4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∏–∑ SnailyCAD');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    process.exit(1);
  }
}

testSnailyCADAPI()
  .then(() => {
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }); 