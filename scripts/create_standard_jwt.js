import jwt from 'jsonwebtoken'

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Supabase
const JWT_SECRET = 'super-secret-jwt-token-with-at-least-32-characters-long'

// –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω—ã –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ Supabase
const createSupabaseJWT = (role, secret) => {
    const payload = {
        iss: 'supabase-demo',
        iat: Math.floor(Date.now() / 1000),
        exp: Math.floor(Date.now() / 1000) + (10 * 365 * 24 * 60 * 60), // 10 –ª–µ—Ç
        role: role
    }
    
    return jwt.sign(payload, secret)
}

// –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω—ã
const anonKey = createSupabaseJWT('anon', JWT_SECRET)
const serviceRoleKey = createSupabaseJWT('service_role', JWT_SECRET)

console.log('üîë –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ JWT —Ç–æ–∫–µ–Ω—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Supabase:')
console.log('\n# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –≤–∞—à .env —Ñ–∞–π–ª:')
console.log('SUPABASE_URL=http://localhost:54321')
console.log('SUPABASE_ANON_KEY=' + anonKey)
console.log('SUPABASE_SERVICE_ROLE_KEY=' + serviceRoleKey)
console.log('JWT_SECRET=' + JWT_SECRET)
console.log('\nVITE_SUPABASE_URL=http://localhost:54321')
console.log('VITE_SUPABASE_ANON_KEY=' + anonKey)

// –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–æ–∫–µ–Ω—ã
console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤:')
try {
    const decodedAnon = jwt.verify(anonKey, JWT_SECRET)
    const decodedService = jwt.verify(serviceRoleKey, JWT_SECRET)
    console.log('‚úÖ Anon token:', decodedAnon)
    console.log('‚úÖ Service token:', decodedService)
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message)
}
