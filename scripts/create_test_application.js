import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

// –ò—Å–ø–æ–ª—å–∑—É–µ–º service role key –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'http://localhost:54321';
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU';

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

async function createTestApplication() {
  console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ...\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è candidate
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('id, email, username')
      .eq('email', 'candidate@horizon.com')
      .single();

    if (userError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError.message);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email} (ID: ${user.id})`);

    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç
    const { data: departments, error: deptError } = await supabase
      .from('departments')
      .select('id, name')
      .limit(1);

    if (deptError || !departments || departments.length === 0) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤:', deptError?.message);
      return;
    }

    const department = departments[0];
    console.log(`‚úÖ –í—ã–±—Ä–∞–Ω –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç: ${department.name} (ID: ${department.id})`);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
    const testApplicationData = {
      fullName: "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
      birthDate: "1995-05-15",
      departmentId: department.id,
      departmentDescription: "–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –ø–æ–ª–∏—Ü–∏–∏ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ–º –ø—Ä–∞–≤–æ–ø–æ—Ä—è–¥–∫–∞, —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π –∏ –∑–∞—â–∏—Ç–æ–π –≥—Ä–∞–∂–¥–∞–Ω.",
      motivation: "–•–æ—á—É —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ä–≥–∞–Ω–æ–≤ –∏ –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø–æ—Ä—è–¥–æ–∫ –≤ –≥–æ—Ä–æ–¥–µ. –ò–º–µ—é –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ —Å—Ñ–µ—Ä–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –≥–æ—Ç–æ–≤ –∫ –æ–±—É—á–µ–Ω–∏—é.",
      hasMicrophone: true,
      meetsSystemRequirements: true,
      systemRequirementsLink: "https://example.com/requirements",
      sourceOfInformation: "discord",
      inOtherCommunities: false,
      wasInOtherCommunities: true,
      otherCommunitiesDetails: "–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ —Ä–æ–ª–µ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö GTA V –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –ª–µ—Ç"
    };

    const { data: application, error: appError } = await supabase
      .from('applications')
      .insert({
        author_id: user.id,
        type: 'entry',
        status: 'pending',
        data: testApplicationData,
        status_history: [{
          status: 'pending',
          date: new Date().toISOString(),
          comment: '–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞',
          reviewerId: null
        }]
      })
      .select()
      .single();

    if (appError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏:', appError.message);
      return;
    }

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ ID: ${application.id}`);

    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏
    const { error: notificationError } = await supabase
      .from('notifications')
      .insert({
        recipient_id: user.id,
        content: `–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç ${department.name} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.`,
        link: '/applications',
        is_read: false
      });

    if (notificationError) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notificationError.message);
    } else {
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ');
    }

    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
    console.log('=====================================');
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email}`);
    console.log(`üè¢ –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç: ${department.name}`);
    console.log(`üìù –ó–∞—è–≤–∫–∞ ID: ${application.id}`);
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${application.status}`);
    console.log('=====================================');

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏:', error.message);
  }
}

createTestApplication().catch(console.error); 