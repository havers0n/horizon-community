import { config } from 'dotenv';
import { resolve, dirname } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º .env –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
const result = config({ path: resolve(__dirname, '../../.env') });
console.log('üìÅ .env file loaded:', result.parsed ? 'Yes' : 'No');

import { Pool } from 'pg';

console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
console.log('üìä DATABASE_URL:', process.env.DATABASE_URL ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω');

if (process.env.DATABASE_URL) {
  console.log('üîó DATABASE_URL preview:', process.env.DATABASE_URL.substring(0, 50) + '...');
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, —á—Ç–æ –∏ –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º db/index.ts
const isSupabaseConnection = process.env.DATABASE_URL?.includes('supabase.com') || 
                            process.env.DATABASE_URL?.includes('aws-0-eu-north-1.pooler.supabase.com');

console.log('üåê Supabase connection:', isSupabaseConnection ? '–î–∞' : '–ù–µ—Ç');

if (!process.env.DATABASE_URL) {
  console.error('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env');
  process.exit(1);
}

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: isSupabaseConnection ? { rejectUnauthorized: false } : false,
  // –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
  max: 10,
  idleTimeoutMillis: 30000,
  connectionTimeoutMillis: 10000,
});

async function testConnection() {
  try {
    console.log('üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const client = await pool.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é PostgreSQL
    const versionResult = await client.query('SELECT version()');
    console.log('üìä –í–µ—Ä—Å–∏—è PostgreSQL:', versionResult.rows[0].version);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ —Å—Ö–µ–º–µ public
    const tablesResult = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
      ORDER BY table_name
    `);
    
    console.log('üìã –¢–∞–±–ª–∏—Ü—ã –≤ —Å—Ö–µ–º–µ public:');
    if (tablesResult.rows.length === 0) {
      console.log('   –ù–µ—Ç —Ç–∞–±–ª–∏—Ü');
    } else {
      tablesResult.rows.forEach((row, index) => {
        console.log(`   ${index + 1}. ${row.table_name}`);
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
    if (tablesResult.rows.some(row => row.table_name === 'users')) {
      console.log('\nüë• –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users...');
      const usersResult = await client.query('SELECT COUNT(*) as count FROM users');
      console.log(`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResult.rows[0].count}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É departments
    if (tablesResult.rows.some(row => row.table_name === 'departments')) {
      console.log('\nüè¢ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É departments...');
      const deptResult = await client.query('SELECT COUNT(*) as count FROM departments');
      console.log(`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: ${deptResult.rows[0].count}`);
    }
    
    client.release();
    await pool.end();
    
    console.log('\nüéâ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å SASL –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π —Ä–µ—à–µ–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    
    if (error.message.includes('SASL')) {
      console.error('üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ SASL - –ø—Ä–æ–±–ª–µ–º–∞ –ù–ï —Ä–µ—à–µ–Ω–∞!');
    } else {
      console.log('‚ÑπÔ∏è –û—à–∏–±–∫–∞ –Ω–µ —Å–≤—è–∑–∞–Ω–∞ —Å SASL –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π');
    }
    
    await pool.end();
  }
}

testConnection(); 