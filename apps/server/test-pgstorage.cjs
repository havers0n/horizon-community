const { config } = require('dotenv');
const { resolve } = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º .env –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
config({ path: resolve(__dirname, '../../.env') });

const { PgStorage } = require('./db/PgStorage');
const { pool } = require('./db/index');

console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º PgStorage —Å –µ–¥–∏–Ω—ã–º –ø—É–ª–æ–º...');

async function testPgStorage() {
  try {
    console.log('üìä DATABASE_URL:', process.env.DATABASE_URL ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    
    // –°–æ–∑–¥–∞–µ–º PgStorage —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –ø—É–ª–æ–º
    const storage = new PgStorage(pool);
    console.log('‚úÖ PgStorage —Å–æ–∑–¥–∞–Ω —Å –µ–¥–∏–Ω—ã–º –ø—É–ª–æ–º');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ PgStorage
    console.log('üîå –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ PgStorage...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É departments
    const departments = await storage.getAllDepartments();
    console.log('‚úÖ Departments –ø–æ–ª—É—á–µ–Ω—ã:', departments.length);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
    const users = await storage.getAllUsers();
    console.log('‚úÖ Users –ø–æ–ª—É—á–µ–Ω—ã:', users.length);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ auth_id
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º getUserByAuthId...');
    const testAuthId = 'c65bfdf0-820b-449a-b798-f853090da2c4'; // ID –∏–∑ –ª–æ–≥–æ–≤
    const user = await storage.getUserByAuthId(testAuthId);
    console.log('‚úÖ getUserByAuthId –≤—ã–ø–æ–ª–Ω–µ–Ω:', user ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    
    console.log('üéâ PgStorage —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ PgStorage:', error.message);
    
    if (error.message.includes('SASL')) {
      console.error('üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ SASL –≤ PgStorage!');
    } else {
      console.log('‚ÑπÔ∏è –û—à–∏–±–∫–∞ –Ω–µ —Å–≤—è–∑–∞–Ω–∞ —Å SASL');
    }
  }
}

testPgStorage(); 